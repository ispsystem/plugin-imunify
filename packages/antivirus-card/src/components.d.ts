/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  ButtonType,
  ThemePalette,
} from './components/button/button.interface';

export namespace Components {
  interface AntivirusCard {}
  interface AntivirusCardButton {
    'btnType': ButtonType;
    'customCSSClass': string;
    'isDisabled': boolean;
    'theme': ThemePalette;
  }
  interface AntivirusCardHistory {}
  interface AntivirusCardInfectedFiles {}
  interface AntivirusCardModal {
    'modalWidth': string;
    'visible': boolean;
  }
  interface AntivirusCardNavigation {
    'items': {
      label: string;
      active: boolean;
    }[];
  }
  interface AntivirusCardPreview {}
  interface AntivirusCardSwitcher {}
  interface AntivirusCardSwitcherOption {
    'active': boolean;
    'disabled': boolean;
    'last': boolean;
    'selectedDisabled': boolean;
  }
}

declare global {


  interface HTMLAntivirusCardElement extends Components.AntivirusCard, HTMLStencilElement {}
  var HTMLAntivirusCardElement: {
    prototype: HTMLAntivirusCardElement;
    new (): HTMLAntivirusCardElement;
  };

  interface HTMLAntivirusCardButtonElement extends Components.AntivirusCardButton, HTMLStencilElement {}
  var HTMLAntivirusCardButtonElement: {
    prototype: HTMLAntivirusCardButtonElement;
    new (): HTMLAntivirusCardButtonElement;
  };

  interface HTMLAntivirusCardHistoryElement extends Components.AntivirusCardHistory, HTMLStencilElement {}
  var HTMLAntivirusCardHistoryElement: {
    prototype: HTMLAntivirusCardHistoryElement;
    new (): HTMLAntivirusCardHistoryElement;
  };

  interface HTMLAntivirusCardInfectedFilesElement extends Components.AntivirusCardInfectedFiles, HTMLStencilElement {}
  var HTMLAntivirusCardInfectedFilesElement: {
    prototype: HTMLAntivirusCardInfectedFilesElement;
    new (): HTMLAntivirusCardInfectedFilesElement;
  };

  interface HTMLAntivirusCardModalElement extends Components.AntivirusCardModal, HTMLStencilElement {}
  var HTMLAntivirusCardModalElement: {
    prototype: HTMLAntivirusCardModalElement;
    new (): HTMLAntivirusCardModalElement;
  };

  interface HTMLAntivirusCardNavigationElement extends Components.AntivirusCardNavigation, HTMLStencilElement {}
  var HTMLAntivirusCardNavigationElement: {
    prototype: HTMLAntivirusCardNavigationElement;
    new (): HTMLAntivirusCardNavigationElement;
  };

  interface HTMLAntivirusCardPreviewElement extends Components.AntivirusCardPreview, HTMLStencilElement {}
  var HTMLAntivirusCardPreviewElement: {
    prototype: HTMLAntivirusCardPreviewElement;
    new (): HTMLAntivirusCardPreviewElement;
  };

  interface HTMLAntivirusCardSwitcherElement extends Components.AntivirusCardSwitcher, HTMLStencilElement {}
  var HTMLAntivirusCardSwitcherElement: {
    prototype: HTMLAntivirusCardSwitcherElement;
    new (): HTMLAntivirusCardSwitcherElement;
  };

  interface HTMLAntivirusCardSwitcherOptionElement extends Components.AntivirusCardSwitcherOption, HTMLStencilElement {}
  var HTMLAntivirusCardSwitcherOptionElement: {
    prototype: HTMLAntivirusCardSwitcherOptionElement;
    new (): HTMLAntivirusCardSwitcherOptionElement;
  };
  interface HTMLElementTagNameMap {
    'antivirus-card': HTMLAntivirusCardElement;
    'antivirus-card-button': HTMLAntivirusCardButtonElement;
    'antivirus-card-history': HTMLAntivirusCardHistoryElement;
    'antivirus-card-infected-files': HTMLAntivirusCardInfectedFilesElement;
    'antivirus-card-modal': HTMLAntivirusCardModalElement;
    'antivirus-card-navigation': HTMLAntivirusCardNavigationElement;
    'antivirus-card-preview': HTMLAntivirusCardPreviewElement;
    'antivirus-card-switcher': HTMLAntivirusCardSwitcherElement;
    'antivirus-card-switcher-option': HTMLAntivirusCardSwitcherOptionElement;
  }
}

declare namespace LocalJSX {
  interface AntivirusCard extends JSXBase.HTMLAttributes<HTMLAntivirusCardElement> {}
  interface AntivirusCardButton extends JSXBase.HTMLAttributes<HTMLAntivirusCardButtonElement> {
    'btnType'?: ButtonType;
    'customCSSClass'?: string;
    'isDisabled'?: boolean;
    'theme'?: ThemePalette;
  }
  interface AntivirusCardHistory extends JSXBase.HTMLAttributes<HTMLAntivirusCardHistoryElement> {}
  interface AntivirusCardInfectedFiles extends JSXBase.HTMLAttributes<HTMLAntivirusCardInfectedFilesElement> {
    'onOpenBuyModal'?: (event: CustomEvent<any>) => void;
  }
  interface AntivirusCardModal extends JSXBase.HTMLAttributes<HTMLAntivirusCardModalElement> {
    'modalWidth'?: string;
    'visible'?: boolean;
  }
  interface AntivirusCardNavigation extends JSXBase.HTMLAttributes<HTMLAntivirusCardNavigationElement> {
    'items'?: {
      label: string;
      active: boolean;
    }[];
    'onClickItem'?: (event: CustomEvent<any>) => void;
  }
  interface AntivirusCardPreview extends JSXBase.HTMLAttributes<HTMLAntivirusCardPreviewElement> {
    'onClickItem'?: (event: CustomEvent<any>) => void;
    'onOpenBuyModal'?: (event: CustomEvent<any>) => void;
  }
  interface AntivirusCardSwitcher extends JSXBase.HTMLAttributes<HTMLAntivirusCardSwitcherElement> {}
  interface AntivirusCardSwitcherOption extends JSXBase.HTMLAttributes<HTMLAntivirusCardSwitcherOptionElement> {
    'active'?: boolean;
    'disabled'?: boolean;
    'last'?: boolean;
    'onSelected'?: (event: CustomEvent<any>) => void;
    'selectedDisabled'?: boolean;
  }

  interface IntrinsicElements {
    'antivirus-card': AntivirusCard;
    'antivirus-card-button': AntivirusCardButton;
    'antivirus-card-history': AntivirusCardHistory;
    'antivirus-card-infected-files': AntivirusCardInfectedFiles;
    'antivirus-card-modal': AntivirusCardModal;
    'antivirus-card-navigation': AntivirusCardNavigation;
    'antivirus-card-preview': AntivirusCardPreview;
    'antivirus-card-switcher': AntivirusCardSwitcher;
    'antivirus-card-switcher-option': AntivirusCardSwitcherOption;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


